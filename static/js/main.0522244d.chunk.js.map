{"version":3,"sources":["contracts sync /^/.//.*$","static/metamask-logo.svg","AppContext.js","theme.js","components/styled/Button.js","components/styled/Text.js","hooks/useContract.js","hooks/useIsValidNetwork.js","utils/utils.js","hooks/useERC20Contract.js","hooks/useLongContract.js","components/styled/SliderSyled.js","components/Slider.js","components/styled/Input.js","components/InputWithMax.js","pages/Home/Long.js","components/InputWithButton.js","pages/Home/Reduce.js","pages/Home/Withdraw.js","pages/Home/Deposit.js","pages/Home/Repay.js","pages/Home/UserVault.js","components/styled/Card.js","components/ExpandableCard.js","pages/Home/VaultTypeCard.js","pages/Home/index.js","components/styled/NotificationStyled.js","components/Notification.js","components/TransactionNotification.js","connectors.js","components/MetamaskConnectButton.js","components/ClaimButton.js","components/Header.js","components/GlobalError.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","initialContext","isWalletConnectionModalOpen","setWalletConnectModal","txnStatus","setTxnStatus","contentError","undefined","setContentError","userVaults","vaultTypes","maiBalance","maiAllowance","setVaultIds","addVaultId","setUserWalletCollateralAmount","setAllowance","setVault","setMultiplicatorMax","setMinCollateralPercentage","setMaiBalance","setMaiAllowance","appReducer","state","type","payload","isWalletConnectModalOpen","update","indexVaultType","vaultIds","$set","$push","vaultId","userWalletAmount","amount","multiplicatorMax","minCollateralPercentage","allowance","vaults","vault","AppContext","createContext","useAppContext","React","useContext","AppContextProvider","children","useReducer","store","dispatch","contextValue","open","status","str","Provider","value","colors","purple","brown","red","lightRed","lightBlue","darkBlue","gray","lightGray","green","lightGreen","textSizes","t0","t1","t2","t3","t4","t5","t6","theme","ButtonCommon","styled","button","ButtonAction","ButtonAlert","Text","span","p","fontFamily","underline","capitalize","uppercase","pointer","center","right","left","italic","bold","fontWeight","display","block","inline","color","black","ellipsis","lineHeight","opacity","useContract","contractAddress","ABI","AddressZero","useWeb3React","library","account","signerOrProvider","getSigner","useMemo","ethers","Contract","supportedCompNetworks","useIsValidNetwork","chainId","isValidNetwork","includes","getLiquidationPrice","debt","collateral","minCollateralPercantage","bigNumberify","liquidationPrice","mul","div","parseFloat","toString","isNumberAccepted","number","RegExp","test","getConfirmationsCount","useERC20Contract","userVault","tokenAddress","tokenContract","IERC20_ABI","abi","maiContract","tokenAddresses","MAI","vaultJson","require","jsonName","deployedNetwork","networks","longContractAddress","address","fetchTokenBalance","a","balanceOf","tokenBalance","index","fetchMaiBalance","fetchMaiUserAllowance","tokenAllowance","approve","txn","wait","fetchTokenAllowance","console","error","useLongContract","longContract","maiVaultAddress","IERC20_STABLECOIN_ABI","createVault","fetchVaultIds","getUserVaultList","results","result","fetchVault","vaultCollateral","maiDeposit","vaultDebt","liquidationPriceStr","getMaxWithdrawableCollateral","maxWithdrawableAmount","fetchMaxMultiplicator","getMultiplicatorMax100th","resultFloat","fetchMinimumCollateralPercentage","getMinimumCollateralPercentage","fetchDebtForAmount","getMAIDebtForAmount","fetchAmountMin","tokanIn","tokenOut","amountOut","getAmountInMin","fetchMaxWithdrawableCollateral","long","collateralAmountToUse","longAsset","reduce","debtToRepay","reduceLong","withdraw","withdrawCollateral","deposit","repay","SliderStyled","input","Slider","min","max","step","onChange","style","prefixMinMax","list","defaultValue","event","target","justifyContent","label","defaultProps","Input","InputWithMax","onClickMax","disabled","typeInput","maxValue","useState","setValue","flex","paddingRight","onClick","marginLeft","Long","multiplicator","setMultiplicator","setCollateralAmountToUse","amountToLong","setAmountToLong","buttonDisabled","setButtonDisabled","liquidationPriceEstimate","setLiquidationPriceEstimate","actionButton","setActionButton","useEffect","mounted","getLiquiditionPriceEstimate","amountToUseBN","gt","collateralAmountToUseBN","lt","onAllowanceChange","getAmountToLong","amountToUse","_multiplicator","multiplicator100th","Math","trunc","sub","debtAdded","debtToal","add","totalCollateral","handleCollateralToUseChange","parseUnits","decimals","amountBN","lte","toLong","rowGap","flexDirection","formatUnits","newValue","InputWithButton","buttonLabel","Reduce","amountToReduce","setAmountToReduce","debtBN","collateralToUse","newCollateral","Withdraw","amountToWithdraw","setAmountToWithdraw","handleOnInputChange","Deposit","setAmount","_amount","Repay","newDebt","UserVault","borderBottom","marginBottom","Card","CardHeader","expandable","ExpandableCard","contentStyle","defaultExpand","headerContent","expanded","setExpanded","size","VaultTypeCard","active","vaultIdSelected","setVaultIdSelected","paddingTop","width","alignItems","stopPropagation","handleCreateVault","gap","selectVault","key","marginTop","Home","NotificationStyled","NotificationContent","GlobalErrorStyled","Notification","onClose","TransactionNotification","txnStatusRef","useRef","current","setTimeout","headerText","loading","css","getMessage","injected","InjectedConnector","supportedChainIds","MetamaskLogo","img","attrs","src","MMLogo","pageState","MetamaskConnectButton","activate","deactivate","setStatus","tryActivate","className","num","substring","length","shortenAddress","window","ethereum","UnsupportedChainIdError","ClaimButton","claimableRewards","setClaimableRewards","vaultAddresses","getVaultAddresses","HELPER_ADMIN","helperContract","rewardsTotal","getRewardsTotal","claimAllRewards","claimRewards","Header","GlobalError","fluid","getLibrary","provider","providers","Web3Provider","App","on","location","reload","margin","maxWidth","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0522244d.chunk.js","sourcesContent":["var map = {\n\t\"./AaveVaultLong\": 45,\n\t\"./AaveVaultLong.json\": 45,\n\t\"./Address\": 46,\n\t\"./Address.json\": 46,\n\t\"./Context\": 47,\n\t\"./Context.json\": 47,\n\t\"./DataTypes\": 48,\n\t\"./DataTypes.json\": 48,\n\t\"./FlashLoanReceiverBase\": 49,\n\t\"./FlashLoanReceiverBase.json\": 49,\n\t\"./GhstVaultLong\": 50,\n\t\"./GhstVaultLong.json\": 50,\n\t\"./HelperAdmin\": 27,\n\t\"./HelperAdmin.json\": 27,\n\t\"./IERC20\": 31,\n\t\"./IERC20.json\": 31,\n\t\"./IERC20StableCoin\": 32,\n\t\"./IERC20StableCoin.json\": 32,\n\t\"./IFlashLoanReceiver\": 51,\n\t\"./IFlashLoanReceiver.json\": 51,\n\t\"./ILendingPool\": 52,\n\t\"./ILendingPool.json\": 52,\n\t\"./ILendingPoolAddressesProvider\": 53,\n\t\"./ILendingPoolAddressesProvider.json\": 53,\n\t\"./IUniswapV2Factory\": 54,\n\t\"./IUniswapV2Factory.json\": 54,\n\t\"./IUniswapV2Pair\": 55,\n\t\"./IUniswapV2Pair.json\": 55,\n\t\"./IUniswapV2Router\": 56,\n\t\"./IUniswapV2Router.json\": 56,\n\t\"./IVaultLongMaiFinance\": 57,\n\t\"./IVaultLongMaiFinance.json\": 57,\n\t\"./LinkVaultLong\": 58,\n\t\"./LinkVaultLong.json\": 58,\n\t\"./Migrations\": 59,\n\t\"./Migrations.json\": 59,\n\t\"./Ownable\": 60,\n\t\"./Ownable.json\": 60,\n\t\"./SafeERC20\": 61,\n\t\"./SafeERC20.json\": 61,\n\t\"./VaultLongMaiFinanceBase\": 62,\n\t\"./VaultLongMaiFinanceBase.json\": 62,\n\t\"./WbtcVaultLong\": 63,\n\t\"./WbtcVaultLong.json\": 63,\n\t\"./WethVaultLong\": 64,\n\t\"./WethVaultLong.json\": 64\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 37;","module.exports = __webpack_public_path__ + \"static/media/metamask-logo.fd681d4a.svg\";","import React, { createContext, useReducer } from \"react\";\nimport update from \"immutability-helper\";\nimport vaultsInfo from \"./constants/vaultsInfo.json\";\n\nconst initialContext = {\n    isWalletConnectionModalOpen: false,\n    setWalletConnectModal: () => {},\n    txnStatus: \"NOT_SUBMITTED\",\n    setTxnStatus: () => {},\n    contentError: undefined,\n    setContentError: () => {},\n    userVaults: vaultsInfo.vaultTypes,\n    maiBalance: \"0\",\n    maiAllowance: \"0\",\n    setVaultIds: () => {},\n    addVaultId: () => {},\n    setUserWalletCollateralAmount: () => {},\n    setAllowance: () => {},\n    setVault: () => {},\n    setMultiplicatorMax: () => {},\n    setMinCollateralPercentage: () => {},\n    setMaiBalance: () => {},\n    setMaiAllowance: () => {},\n};\n\nconst appReducer = (state, { type, payload }) => {\n    switch (type) {\n        case \"SET_WALLET_MODAL\":\n            return {\n                ...state,\n                isWalletConnectModalOpen: payload,\n            };\n        case \"SET_TXN_STATUS\":\n            return {\n                ...state,\n                txnStatus: payload,\n            };\n        case \"SET_CONTENT_ERROR\":\n            return {\n                ...state,\n                contentError: payload,\n            };\n        case \"SET_MAI_BALANCE\":\n            return {\n                ...state,\n                maiBalance: payload,\n            };\n        case \"SET_MAI_ALLOWANCE\":\n            return {\n                ...state,\n                maiAllowance: payload,\n            };\n        case \"SET_USER_VAULTS_IDS\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        vaultIds: { $set: payload.vaultIds },\n                    },\n                },\n            });\n        case \"ADD_USER_VAULT_ID\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        vaultIds: { $push: payload.vaultId },\n                    },\n                },\n            });\n        case \"SET_USER_WALLET_COLLATERAL_AMOUNT\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        userWalletAmount: { $set: payload.amount },\n                    },\n                },\n            });\n        case \"SET_MULTIPLICATOR_MAX\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        multiplicatorMax: { $set: payload.multiplicatorMax },\n                    },\n                },\n            });\n        case \"SET_MIN_COLLATERAL_PERCENTAGE\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        minCollateralPercentage: {\n                            $set: payload.minCollateralPercentage,\n                        },\n                    },\n                },\n            });\n        case \"SET_ALLOWANCE\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        allowance: { $set: payload.amount },\n                    },\n                },\n            });\n        case \"SET_VAULT\":\n            return update(state, {\n                userVaults: {\n                    [payload.indexVaultType]: {\n                        vaults: {\n                            [payload.vaultId]: { $set: payload.vault },\n                        },\n                    },\n                },\n            });\n        default:\n            return state;\n    }\n};\n\nconst AppContext = createContext(initialContext);\nexport const useAppContext = () => React.useContext(AppContext);\nexport const AppContextProvider = ({ children }) => {\n    const [store, dispatch] = useReducer(appReducer, initialContext);\n\n    const contextValue = {\n        isWalletConnectModalOpen: store.isWalletConnectModalOpen,\n        setWalletConnectModal: (open) => {\n            dispatch({ type: \"SET_WALLET_MODAL\", payload: open });\n        },\n        txnStatus: store.txnStatus,\n        setTxnStatus: (status) => {\n            dispatch({ type: \"SET_TXN_STATUS\", payload: status });\n        },\n        contentError: store.contentError,\n        setContentError: (str) => {\n            dispatch({ type: \"SET_CONTENT_ERROR\", payload: str });\n        },\n        maiBalance: store.maiBalance,\n        setMaiBalance: (maiBalance) => {\n            dispatch({ type: \"SET_MAI_BALANCE\", payload: maiBalance });\n        },\n        maiAllowance: store.maiAllowance,\n        setMaiAllowance: (maiAllowance) => {\n            dispatch({ type: \"SET_MAI_ALLOWANCE\", payload: maiAllowance });\n        },\n        userVaults: store.userVaults,\n        setVaultIds: (indexVaultType, vaultIds) => {\n            dispatch({\n                type: \"SET_USER_VAULTS_IDS\",\n                payload: { indexVaultType, vaultIds },\n            });\n        },\n        addVaultId: (indexVaultType, vaultId) => {\n            dispatch({\n                type: \"ADD_USER_VAULT_ID\",\n                payload: { indexVaultType, vaultId },\n            });\n        },\n        setUserWalletCollateralAmount: (indexVaultType, amount) => {\n            dispatch({\n                type: \"SET_USER_WALLET_COLLATERAL_AMOUNT\",\n                payload: { indexVaultType, amount },\n            });\n        },\n        setMultiplicatorMax: (indexVaultType, multiplicatorMax) => {\n            dispatch({\n                type: \"SET_MULTIPLICATOR_MAX\",\n                payload: { indexVaultType, multiplicatorMax },\n            });\n        },\n        setMinCollateralPercentage: (\n            indexVaultType,\n            minCollateralPercentage\n        ) => {\n            dispatch({\n                type: \"SET_MIN_COLLATERAL_PERCENTAGE\",\n                payload: { indexVaultType, minCollateralPercentage },\n            });\n        },\n        setAllowance: (indexVaultType, amount) => {\n            dispatch({\n                type: \"SET_ALLOWANCE\",\n                payload: { indexVaultType, amount },\n            });\n        },\n        setVault: (indexVaultType, vaultId, vault) => {\n            dispatch({\n                type: \"SET_VAULT\",\n                payload: { indexVaultType, vaultId, vault },\n            });\n        },\n    };\n\n    return (\n        <AppContext.Provider value={contextValue}>\n            {children}\n        </AppContext.Provider>\n    );\n};\n","export const colors = {\n    purple: \"#bf00ff\",\n    brown: \"#c9b18aff\",\n    red: \"#d13328\",\n    lightRed: \"#c76861\",\n    lightBlue: \"#347e8aff\",\n    darkBlue: \"#29576eff\",\n    gray: \"#5b778fff\",\n    lightGray: \"#F3F5F7\",\n    green: \"#7DDE92\",\n    lightGreen: \"#b2d9ba\",\n};\n\nexport const textSizes = {\n    t0: \"48px\",\n    t1: \"36px\",\n    t2: \"26px\",\n    t3: \"22px\",\n    t4: \"18px\",\n    t5: \"16px\",\n    t6: \"14px\",\n};\n\nconst theme = {\n    ...colors,\n    textSizes,\n};\n\nexport default theme;\n","import styled from \"styled-components\";\nimport { colors, textSizes } from \"../../theme\";\n\nexport const ButtonCommon = styled.button`\n    background-color: ${colors.darkBlue};\n    color: ${colors.lightGray};\n    padding: 10px;\n    border-radius: 10px;\n    border-style: none;\n    cursor: pointer;\n    font-family: Inter custom, sans-serif;\n    font-size: ${textSizes.t5};\n    &:hover {\n        background-color: ${colors.lightBlue};\n    }\n\n    &:disabled {\n        background-color: ${colors.lightBlue};\n        cursor: unset;\n    }\n`;\n\nexport const ButtonAction = styled(ButtonCommon)`\n    background-color: ${colors.green};\n    &:hover {\n        background-color: ${colors.lightGreen};\n    }\n\n    &:disabled {\n        background-color: ${colors.lightGreen};\n    }\n`;\n\nexport const ButtonAlert = styled(ButtonCommon)`\n    background-color: ${colors.red};\n    &:hover {\n        background-color: ${colors.lightRed};\n    }\n\n    &:disabled {\n        background-color: ${colors.lightRed};\n    }\n`;\n","import styled from \"styled-components\";\nimport theme, { textSizes } from \"../../theme\";\n\nconst getColor = (p) => {\n    // @ts-ignore\n    if (theme[p.color]) return theme[p.color];\n    if (p.color) return p.color;\n    return theme.black;\n};\nconst getAlignment = (p) => {\n    if (p.center) return \"center\";\n    if (p.right) return \"right\";\n    if (p.left) return \"left\";\n    return \"inherit\";\n};\nconst getDisplay = (p) => {\n    if (p.display) return p.display;\n    if (p.block) return \"block\";\n    if (p.inline) return \"inline\";\n    return \"initial\";\n};\nconst getWeight = (p) => {\n    if (p.bold) return 700;\n    if (p.fontWeight) return p.fontWeight;\n    return \"inherit\";\n};\nconst getLineHeight = (p) => {\n    if (p.lineHeight) return p.lineHeight;\n    return \"inherit\";\n};\nconst getSize = (p) => {\n    if (p.t0) return textSizes.t0;\n    if (p.t1) return textSizes.t1;\n    if (p.t2) return textSizes.t2;\n    if (p.t3) return textSizes.t3;\n    if (p.t4) return textSizes.t4;\n    if (p.t5) return textSizes.t5;\n    if (p.t6) return textSizes.t6;\n\n    return \"inherit\";\n};\nconst getTransform = (p) => {\n    if (p.capitalize) return \"capitalize\";\n    if (p.uppercase) return \"uppercase\";\n    return \"\";\n};\n\nconst Text = styled.span`\n    font-family: ${(p) => p.fontFamily || \"Inter custom,sans-serif\"};\n    text-decoration: ${(p) => (p.underline ? \"underline\" : \"\")};\n    text-transform: ${getTransform};\n    cursor: ${(p) => (p.pointer ? \"pointer\" : \"\")};\n    text-align: ${getAlignment};\n    font-style: ${(p) => (p.italic ? \"italic\" : \"\")};\n    font-size: ${getSize};\n    font-weight: ${getWeight};\n    display: ${getDisplay};\n    color: ${getColor};\n    overflow: ${(p) => (p.ellipsis ? \"hidden\" : \"inherit\")};\n    text-overflow: ${(p) => (p.ellipsis ? \"ellipsis\" : \"inherit\")};\n    white-space: ${(p) => (p.ellipsis ? \"nowrap\" : \"\")};\n    line-height: ${getLineHeight};\n    opacity: ${(p) => p.opacity || 1};\n`;\n\nexport default Text;\n","import { useMemo } from \"react\";\nimport { ethers } from \"ethers\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport function useContract(contractAddress, ABI) {\n    if (contractAddress === AddressZero) {\n        throw Error(\n            `Invalid 'contractAddress' parameter '${contractAddress}'.`\n        );\n    }\n\n    const { library, account } = useWeb3React();\n\n    const signerOrProvider = account ? library.getSigner(account) : library;\n\n    return useMemo(() => {\n        return new ethers.Contract(contractAddress, ABI, signerOrProvider);\n    }, [contractAddress, ABI, signerOrProvider]);\n}\n","import { useMemo } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nconst supportedCompNetworks = [137, 1337];\n\nfunction useIsValidNetwork() {\n    const { chainId } = useWeb3React();\n\n    const isValidCompNetwork = useMemo(() => {\n        return supportedCompNetworks.includes(chainId);\n    }, [chainId]);\n\n    return {\n        isValidNetwork: isValidCompNetwork,\n    };\n}\n\nexport default useIsValidNetwork;\n","import { bigNumberify } from \"ethers/utils/bignumber\";\n\nexport const getLiquidationPrice = (\n    debt,\n    collateral,\n    minCollateralPercantage\n) => {\n    if (bigNumberify(collateral) > 0) {\n        const liquidationPrice = bigNumberify(debt)\n            .mul(minCollateralPercantage)\n            .div(bigNumberify(collateral));\n        const liquidationPriceFloat = parseFloat(liquidationPrice) / 100;\n        return liquidationPriceFloat.toString();\n    }\n\n    return \"0\";\n};\n\nexport const isNumberAccepted = (number) => {\n    const regex = new RegExp(\"^[0-9]*[.,]?[0-9]*$\");\n    return regex.test(number);\n};\n\nexport const getConfirmationsCount = (chainId) => {\n    return chainId === 1337 ? 1 : 2;\n};\n\nexport const shortenAddress = (address, num = 3) => {\n    if (!address) return \"\";\n    return (\n        !!address &&\n        `${address.substring(0, num + 2)}...${address.substring(\n            address.length - num - 1\n        )}`\n    );\n};\n","import { useContract } from \"./useContract\";\nimport IERC20_ABI from \"../contracts/IERC20.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useAppContext } from \"../AppContext\";\nimport useIsValidNetwork from \"../hooks/useIsValidNetwork\";\nimport tokenAddresses from \"../constants/tokenAddresses.json\";\nimport { getConfirmationsCount } from \"../utils/utils\";\n\nexport const useERC20Contract = (\n    userVault,\n    tokenAddress = userVault.tokenAddress\n) => {\n    const { account, chainId } = useWeb3React();\n    const { isValidNetwork } = useIsValidNetwork();\n    const tokenContract = useContract(tokenAddress, IERC20_ABI.abi);\n    const maiContract = useContract(tokenAddresses.MAI, IERC20_ABI.abi);\n    const vaultJson = require(\"../contracts/\" + userVault.jsonName);\n    const deployedNetwork = vaultJson.networks[chainId];\n    const longContractAddress = deployedNetwork.address;\n    const {\n        setUserWalletCollateralAmount,\n        setAllowance,\n        setTxnStatus,\n        setMaiBalance,\n        setMaiAllowance,\n    } = useAppContext();\n\n    const fetchTokenBalance = async () => {\n        const tokenBalance = await tokenContract.balanceOf(account);\n        setUserWalletCollateralAmount(userVault.index, tokenBalance.toString());\n    };\n\n    const fetchMaiBalance = async () => {\n        const tokenBalance = await maiContract.balanceOf(account);\n        setMaiBalance(tokenBalance.toString());\n    };\n\n    const fetchMaiUserAllowance = async () => {\n        const tokenAllowance = await maiContract.allowance(\n            account,\n            longContractAddress\n        );\n        setMaiAllowance(tokenAllowance.toString());\n    };\n\n    const approve = async (amount) => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await tokenContract.approve(\n                    longContractAddress,\n                    amount\n                );\n                await txn.wait(getConfirmationsCount(chainId));\n                if (tokenAddress === tokenAddresses.MAI) {\n                    fetchMaiUserAllowance();\n                } else {\n                    fetchTokenAllowance();\n                }\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    const fetchTokenAllowance = async () => {\n        const tokenAllowance = await tokenContract.allowance(\n            account,\n            longContractAddress\n        );\n        setAllowance(userVault.index, tokenAllowance.toString());\n    };\n\n    return {\n        fetchTokenBalance,\n        fetchTokenAllowance,\n        approve,\n        fetchMaiBalance,\n        fetchMaiUserAllowance,\n    };\n};\n","import { useContract } from \"./useContract\";\nimport IERC20_STABLECOIN_ABI from \"../contracts/IERC20StableCoin.json\";\nimport useIsValidNetwork from \"../hooks/useIsValidNetwork\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useAppContext } from \"../AppContext\";\nimport { getConfirmationsCount, getLiquidationPrice } from \"../utils/utils\";\nimport { useERC20Contract } from \"./useERC20Contract\";\n\nexport const useLongContract = (userVault) => {\n    const { account, chainId } = useWeb3React();\n    const { isValidNetwork } = useIsValidNetwork();\n    const { fetchTokenAllowance, fetchTokenBalance, fetchMaiBalance } =\n        useERC20Contract(userVault);\n    const vaultJson = require(\"../contracts/\" + userVault.jsonName);\n    const deployedNetwork = vaultJson.networks[chainId];\n    const longContract = useContract(deployedNetwork.address, vaultJson.abi);\n    const maiContract = useContract(\n        userVault.maiVaultAddress,\n        IERC20_STABLECOIN_ABI.abi\n    );\n\n    const {\n        setTxnStatus,\n        setVaultIds,\n        setVault,\n        setMultiplicatorMax,\n        setMinCollateralPercentage,\n    } = useAppContext();\n\n    const createVault = async () => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await longContract.createVault();\n                await txn.wait(getConfirmationsCount(chainId));\n                await fetchVaultIds();\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    const fetchVaultIds = async () => {\n        const results = await longContract.getUserVaultList();\n        const vaultIds = results.map((result) => {\n            return result.toString();\n        });\n        setVaultIds(userVault.index, vaultIds);\n    };\n\n    const fetchVault = async (vaultId) => {\n        const maiDeposit = await maiContract.vaultCollateral(vaultId);\n        const debt = await maiContract.vaultDebt(vaultId);\n        let liquidationPriceStr = getLiquidationPrice(\n            debt,\n            maiDeposit,\n            userVault.minCollateralPercentage\n        );\n        const maxWithdrawableAmount =\n            await longContract.getMaxWithdrawableCollateral(vaultId);\n\n        setVault(userVault.index, vaultId, {\n            maiDeposit: maiDeposit.toString(),\n            debt: debt.toString(),\n            liquidationPrice: liquidationPriceStr,\n            maxWithdrawableAmount: maxWithdrawableAmount.toString(),\n        });\n    };\n\n    const fetchMaxMultiplicator = async () => {\n        const result = await longContract.getMultiplicatorMax100th();\n        const resultFloat = parseFloat(result.toString());\n        setMultiplicatorMax(userVault.index, resultFloat / 100);\n    };\n\n    const fetchMinimumCollateralPercentage = async () => {\n        const result = await longContract.getMinimumCollateralPercentage();\n        setMinCollateralPercentage(userVault.index, result);\n    };\n\n    const fetchDebtForAmount = async (amount) => {\n        const result = await longContract.getMAIDebtForAmount(amount);\n        return result.toString();\n    };\n\n    const fetchAmountMin = async (tokanIn, tokenOut, amountOut) => {\n        const result = await longContract.getAmountInMin(\n            tokanIn,\n            tokenOut,\n            amountOut\n        );\n        return result.toString();\n    };\n\n    const fetchMaxWithdrawableCollateral = async (vaultId) => {\n        const result = await longContract.getMaxWithdrawableCollateral(vaultId);\n        return result.toString();\n    };\n\n    const long = async (vaultId, amount, collateralAmountToUse) => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await longContract.longAsset(\n                    vaultId,\n                    amount,\n                    collateralAmountToUse\n                );\n                await txn.wait(getConfirmationsCount(chainId));\n                fetchVault(vaultId);\n                fetchTokenBalance();\n                fetchTokenAllowance();\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    const reduce = async (vaultId, debtToRepay) => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await longContract.reduceLong(vaultId, debtToRepay);\n                await txn.wait(getConfirmationsCount(chainId));\n                fetchVault(vaultId);\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    const withdraw = async (vaultId, amount) => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await longContract.withdrawCollateral(\n                    vaultId,\n                    amount\n                );\n                await txn.wait(getConfirmationsCount(chainId));\n                fetchVault(vaultId);\n                fetchTokenBalance();\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    const deposit = async (vaultId, amount) => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await longContract.deposit(vaultId, amount);\n                await txn.wait(getConfirmationsCount(chainId));\n                fetchVault(vaultId);\n                fetchTokenBalance();\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    const repay = async (vaultId, amount) => {\n        if (account && isValidNetwork) {\n            try {\n                setTxnStatus(\"LOADING\");\n                const txn = await longContract.repay(vaultId, amount);\n                await txn.wait(getConfirmationsCount(chainId));\n                fetchVault(vaultId);\n                fetchTokenBalance();\n                fetchMaiBalance();\n                setTxnStatus(\"COMPLETE\");\n            } catch (error) {\n                console.error(error);\n                setTxnStatus(\"ERROR\");\n            }\n        }\n    };\n\n    return {\n        createVault,\n        fetchVaultIds,\n        fetchVault,\n        fetchMaxMultiplicator,\n        long,\n        fetchMinimumCollateralPercentage,\n        fetchDebtForAmount,\n        reduce,\n        fetchAmountMin,\n        fetchMaxWithdrawableCollateral,\n        withdraw,\n        deposit,\n        repay,\n    };\n};\n","import styled from \"styled-components\";\n\nexport const SliderStyled = styled.input`\n    width: 100%;\n    &::-webkit-slider-thumb {\n        cursor: pointer; /* Cursor on hover */\n    }\n`;\n","import React from \"react\";\nimport { SliderStyled } from \"./styled/SliderSyled\";\nimport PropTypes from \"prop-types\";\n\nconst Slider = ({ min, max, step, onChange, style, prefixMinMax }) => {\n    return (\n        <div style={style}>\n            <SliderStyled\n                type=\"range\"\n                list=\"tickmarks\"\n                step={step}\n                min={min}\n                max={max}\n                defaultValue={min}\n                onChange={(event) => onChange(event.target.value)}\n            />\n            <datalist\n                id=\"tickmarks\"\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    color: \"red\",\n                }}\n            >\n                <option value={min} label={prefixMinMax + \"\" + min}></option>\n                <option value={max} label={prefixMinMax + \"\" + max}></option>\n            </datalist>\n        </div>\n    );\n};\n\nSlider.propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    step: PropTypes.number,\n    prefixMinMax: PropTypes.string,\n};\n\nSlider.defaultProps = {\n    min: 1,\n    max: 4,\n    step: 0.1,\n    prefixMinMax: \"\",\n};\n\nexport default Slider;\n","import styled from \"styled-components\";\nimport { colors, textSizes } from \"../../theme\";\n\nexport const Input = styled.input`\n    padding: 5px;\n    border-radius: 10px;\n    border-width: 1px;\n    border-color: ${colors.gray};\n    font-size: ${textSizes.t3};\n    font-family: \"Inter custom,sans-serif\";\n`;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ButtonCommon } from \"./styled/Button\";\nimport { Input } from \"./styled/Input\";\n\nconst InputWithMax = ({\n    onClickMax,\n    style,\n    onChange,\n    disabled,\n    typeInput,\n    maxValue,\n}) => {\n    const [value, setValue] = useState(\"0.0\");\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                }}\n            >\n                <Input\n                    onChange={(event) => {\n                        setValue(event.target.value);\n                        onChange(event.target.value);\n                    }}\n                    type={typeInput}\n                    style={{ flex: 1, paddingRight: 50 }}\n                    value={value}\n                />\n                <ButtonCommon\n                    onClick={() => {\n                        setValue(maxValue);\n                        onChange(maxValue);\n                        onClickMax(value);\n                    }}\n                    disabled={disabled}\n                    style={{ marginLeft: -50 }}\n                >\n                    MAX\n                </ButtonCommon>\n            </div>\n        </div>\n    );\n};\n\nInputWithMax.propTypes = {\n    onClickMax: PropTypes.func,\n    maxValue: PropTypes.string,\n};\n\nInputWithMax.defaultProps = {\n    onClickMax: () => {},\n    maxValue: \"0\",\n};\n\nexport default InputWithMax;\n","import React, { useEffect, useState } from \"react\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { bigNumberify } from \"ethers/utils/bignumber\";\nimport Slider from \"../../components/Slider\";\nimport { ButtonAction } from \"../../components/styled/Button\";\nimport Text from \"../../components/styled/Text\";\nimport { getLiquidationPrice, isNumberAccepted } from \"../../utils/utils\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { useERC20Contract } from \"../../hooks/useERC20Contract\";\nimport InputWithMax from \"../../components/InputWithMax\";\n\nconst Long = ({ userVault, vaultId, style }) => {\n    const [multiplicator, setMultiplicator] = useState(1.01);\n    const [collateralAmountToUse, setCollateralAmountToUse] = useState(\"\");\n    const [amountToLong, setAmountToLong] = useState(\"0\");\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [liquidationPriceEstimate, setLiquidationPriceEstimate] =\n        useState(\"\");\n    const [actionButton, setActionButton] = useState(\"APPROVE\");\n    const { long, fetchDebtForAmount } = useLongContract(userVault);\n    const { approve } = useERC20Contract(userVault);\n    const handleApproveClick = () => {\n        approve(collateralAmountToUse);\n    };\n    const handleOnLongClick = () =>\n        long(vaultId, amountToLong, collateralAmountToUse);\n\n    useEffect(() => {\n        let mounted = true;\n        mounted &&\n            getLiquiditionPriceEstimate(amountToLong, collateralAmountToUse);\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [vaultId, collateralAmountToUse, amountToLong]);\n\n    useEffect(() => {\n        let mounted = true;\n        const amountToUseBN = bigNumberify(collateralAmountToUse);\n        mounted && amountToUseBN.gt(0)\n            ? setButtonDisabled(false)\n            : setButtonDisabled(true);\n        return () => {\n            mounted = false;\n        };\n    }, [userVault.userWalletAmount, collateralAmountToUse]);\n\n    useEffect(() => {\n        let mounted = true;\n        const onAllowanceChange = (allowance) => {\n            const collateralAmountToUseBN = bigNumberify(collateralAmountToUse);\n            const allowanceBN = bigNumberify(allowance);\n            if (allowanceBN.lt(collateralAmountToUseBN)) {\n                setActionButton(\"APPROVE\");\n            } else {\n                setActionButton(\"LONG\");\n            }\n        };\n        mounted && onAllowanceChange(userVault.allowance);\n        return () => {\n            mounted = false;\n        };\n    }, [userVault.allowance, collateralAmountToUse]);\n\n    const handleOnSliderChange = (newValue) => {\n        setMultiplicator(newValue);\n        const amountToUseBN = bigNumberify(collateralAmountToUse);\n        if (amountToUseBN.gt(0)) {\n            const toLong = getAmountToLong(collateralAmountToUse, newValue);\n            setAmountToLong(toLong);\n        }\n    };\n\n    const getAmountToLong = (amountToUse, _multiplicator) => {\n        const amountToUseBN = bigNumberify(amountToUse);\n        if (amountToUseBN.gt(0)) {\n            const multiplicator100th = Math.trunc(_multiplicator * 100);\n            const multipliedBN = amountToUseBN.mul(multiplicator100th).div(100);\n            const toLongBN = multipliedBN.sub(amountToUseBN);\n            return toLongBN.toString();\n        }\n        return \"\";\n    };\n\n    const getLiquiditionPriceEstimate = async (amount, amountToUse) => {\n        const amountToUseBN = bigNumberify(amountToUse);\n        if (amountToUseBN.gt(0)) {\n            const debtAdded = await fetchDebtForAmount(amount);\n            const debtToal = bigNumberify(debtAdded).add(\n                userVault.vaults[vaultId].debt\n            );\n            const totalCollateral = amountToUseBN\n                .add(bigNumberify(amount))\n                .add(userVault.vaults[vaultId].maiDeposit);\n\n            const result = getLiquidationPrice(\n                debtToal.toString(),\n                totalCollateral.toString(),\n                userVault.minCollateralPercentage\n            );\n            setLiquidationPriceEstimate(result);\n        }\n    };\n\n    const handleCollateralToUseChange = async (amount) => {\n        if (amount !== \"\" && isNumberAccepted(amount)) {\n            const amountToUse = parseUnits(\n                amount,\n                userVault.decimals\n            ).toString();\n\n            const amountBN = bigNumberify(amountToUse);\n            if (\n                amountBN.gt(bigNumberify(userVault.userWalletAmount)) ||\n                amountBN.lte(0)\n            ) {\n                setButtonDisabled(true);\n            } else {\n                const toLong = getAmountToLong(amountToUse, multiplicator);\n                setCollateralAmountToUse(amountToUse);\n                setAmountToLong(toLong);\n                setButtonDisabled(false);\n            }\n        } else {\n            setButtonDisabled(true);\n        }\n    };\n\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 10,\n                    flexDirection: \"column\",\n                }}\n            >\n                <Text>Amount of your {userVault.label} to long :</Text>\n                <InputWithMax\n                    typeInput=\"number\"\n                    onChange={handleCollateralToUseChange}\n                    maxValue={formatUnits(\n                        userVault.userWalletAmount,\n                        userVault.decimals\n                    )}\n                />\n                <Text>Long multiplier :</Text>\n                <Slider\n                    onChange={handleOnSliderChange}\n                    prefixMinMax=\"X\"\n                    min={1.01}\n                    max={userVault.multiplicatorMax}\n                    step={0.01}\n                />\n                {actionButton === \"LONG\" && (\n                    <ButtonAction\n                        disabled={buttonDisabled}\n                        onClick={handleOnLongClick}\n                    >\n                        Long X{multiplicator}\n                    </ButtonAction>\n                )}\n\n                {actionButton === \"APPROVE\" && (\n                    <ButtonAction\n                        disabled={buttonDisabled}\n                        onClick={handleApproveClick}\n                    >\n                        Approve\n                    </ButtonAction>\n                )}\n\n                {!buttonDisabled && (\n                    <Text>\n                        Estimated liquidation price : {liquidationPriceEstimate}\n                    </Text>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Long;\n","import React, { useState } from \"react\";\nimport InputWithMax from \"./InputWithMax\";\nimport { ButtonAction } from \"./styled/Button\";\n\nconst InputWithButton = ({\n    onClick,\n    buttonLabel,\n    style,\n    onChange,\n    disabled,\n    typeInput,\n    maxValue,\n}) => {\n    const [value, setValue] = useState(undefined);\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 10,\n                    flexDirection: \"column\",\n                }}\n            >\n                <InputWithMax\n                    onChange={(newValue) => {\n                        setValue(newValue);\n                        onChange(newValue);\n                    }}\n                    type={typeInput}\n                    maxValue={maxValue}\n                />\n                <ButtonAction\n                    onClick={() => {\n                        onClick(value);\n                    }}\n                    disabled={disabled}\n                >\n                    {buttonLabel}\n                </ButtonAction>\n            </div>\n        </div>\n    );\n};\n\nexport default InputWithButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { bigNumberify } from \"ethers/utils/bignumber\";\nimport Text from \"../../components/styled/Text\";\nimport { getLiquidationPrice, isNumberAccepted } from \"../../utils/utils\";\nimport InputWithButton from \"../../components/InputWithButton\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport tokenAddresses from \"../../constants/tokenAddresses.json\";\n\nconst Reduce = ({ userVault, vaultId, style }) => {\n    const [amountToReduce, setAmountToReduce] = useState(\"\");\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [liquidationPriceEstimate, setLiquidationPriceEstimate] =\n        useState(\"\");\n    const { reduce, fetchAmountMin } = useLongContract(userVault);\n    const handleOnReduceClick = () => {\n        reduce(vaultId, amountToReduce);\n    };\n\n    useEffect(() => {\n        let mounted = true;\n        const debtBN = bigNumberify(userVault.vaults[vaultId].debt);\n        mounted &&\n        amountToReduce !== \"\" &&\n        amountToReduce !== \"0\" &&\n        debtBN.gt(0)\n            ? setButtonDisabled(false)\n            : setButtonDisabled(true);\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [userVault.vaults[vaultId].debt, amountToReduce]);\n\n    const handleOnInputChange = (amount) => {\n        if (amount !== \"\" && isNumberAccepted(amount)) {\n            const amountBN = bigNumberify(\n                parseUnits(amount, userVault.decimals)\n            );\n            if (\n                amountBN.lte(userVault.vaults[vaultId].debt) &&\n                amountBN.gt(0)\n            ) {\n                setAmountToReduce(amountBN.toString());\n                getLiquiditionPriceEstimate(amountBN.toString());\n            } else {\n                setAmountToReduce(\"0\");\n            }\n        } else {\n            setAmountToReduce(\"0\");\n        }\n    };\n\n    const getLiquiditionPriceEstimate = async (amount) => {\n        const debtToal = bigNumberify(userVault.vaults[vaultId].debt).sub(\n            amount\n        );\n\n        const collateralToUse = await fetchAmountMin(\n            userVault.tokenAddress,\n            tokenAddresses.MAI,\n            amount\n        );\n\n        const newCollateral = bigNumberify(\n            userVault.vaults[vaultId].maiDeposit\n        ).sub(collateralToUse);\n\n        const result = getLiquidationPrice(\n            debtToal.toString(),\n            newCollateral.toString(),\n            userVault.minCollateralPercentage\n        );\n        setLiquidationPriceEstimate(result);\n    };\n\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 10,\n                    flexDirection: \"column\",\n                }}\n            >\n                <Text>Amount of debt to reduce :</Text>\n                <InputWithButton\n                    buttonLabel=\"Reduce\"\n                    onClick={handleOnReduceClick}\n                    onChange={handleOnInputChange}\n                    typeInput=\"number\"\n                    disabled={buttonDisabled}\n                    maxValue={formatUnits(\n                        userVault.vaults[vaultId].debt,\n                        userVault.decimals\n                    )}\n                />\n                {!buttonDisabled && (\n                    <Text>\n                        Estimated liquidation price : {liquidationPriceEstimate}\n                    </Text>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Reduce;\n","import React, { useEffect, useState } from \"react\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { bigNumberify } from \"ethers/utils/bignumber\";\nimport Text from \"../../components/styled/Text\";\nimport { getLiquidationPrice, isNumberAccepted } from \"../../utils/utils\";\nimport InputWithButton from \"../../components/InputWithButton\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\n\nconst Withdraw = ({ userVault, vaultId, style }) => {\n    const [amountToWithdraw, setAmountToWithdraw] = useState(\"0\");\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [liquidationPriceEstimate, setLiquidationPriceEstimate] =\n        useState(\"\");\n    const { withdraw } = useLongContract(userVault);\n    const handleWithdrawClick = () => {\n        withdraw(vaultId, amountToWithdraw);\n    };\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            if (\n                amountToWithdraw !== \"\" &&\n                amountToWithdraw !== \"0\" &&\n                userVault.vaults[vaultId].maxWithdrawableAmount !== \"0\"\n            ) {\n                setButtonDisabled(false);\n            } else {\n                setButtonDisabled(true);\n            }\n        }\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [amountToWithdraw, userVault.vaults[vaultId].maxWithdrawableAmount]);\n\n    const handleOnInputChange = async (amount) => {\n        if (amount !== \"\" && isNumberAccepted(amount)) {\n            const amountBN = bigNumberify(\n                parseUnits(amount, userVault.decimals)\n            );\n            if (\n                amountBN.lte(userVault.vaults[vaultId].maxWithdrawableAmount) &&\n                amountBN.gt(0)\n            ) {\n                setAmountToWithdraw(amountBN.toString());\n                getLiquiditionPriceEstimate(amountBN.toString());\n            } else {\n                setAmountToWithdraw(\"0\");\n            }\n        } else {\n            setAmountToWithdraw(\"0\");\n        }\n    };\n\n    const getLiquiditionPriceEstimate = async (amount) => {\n        const newCollateral = bigNumberify(\n            userVault.vaults[vaultId].maiDeposit\n        ).sub(amount);\n\n        const result = getLiquidationPrice(\n            userVault.vaults[vaultId].debt,\n            newCollateral.toString(),\n            userVault.minCollateralPercentage\n        );\n        setLiquidationPriceEstimate(result);\n    };\n\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 10,\n                    flexDirection: \"column\",\n                }}\n            >\n                <Text>Amount of collateral to withdraw :</Text>\n                <InputWithButton\n                    buttonLabel=\"Withdraw\"\n                    onClick={handleWithdrawClick}\n                    onChange={handleOnInputChange}\n                    typeInput=\"number\"\n                    disabled={buttonDisabled}\n                    maxValue={formatUnits(\n                        userVault.vaults[vaultId].maxWithdrawableAmount,\n                        userVault.decimals\n                    )}\n                />\n                {!buttonDisabled && (\n                    <Text>\n                        Estimated liquidation price : {liquidationPriceEstimate}\n                    </Text>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Withdraw;\n","import React, { useEffect, useState } from \"react\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { bigNumberify } from \"ethers/utils/bignumber\";\nimport Text from \"../../components/styled/Text\";\nimport { getLiquidationPrice, isNumberAccepted } from \"../../utils/utils\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport InputWithMax from \"../../components/InputWithMax\";\nimport { useERC20Contract } from \"../../hooks/useERC20Contract\";\nimport { ButtonAction } from \"../../components/styled/Button\";\n\nconst Deposit = ({ userVault, vaultId, style }) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [liquidationPriceEstimate, setLiquidationPriceEstimate] =\n        useState(\"\");\n    const [actionButton, setActionButton] = useState(\"APPROVE\");\n    const { deposit } = useLongContract(userVault);\n    const { approve } = useERC20Contract(userVault);\n    const handleDepositClick = () => {\n        deposit(vaultId, amount);\n    };\n    const handleApproveClick = () => {\n        approve(amount);\n    };\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            if (\n                amount !== \"\" &&\n                amount !== \"0\" &&\n                userVault.userWalletAmount !== \"0\"\n            ) {\n                setButtonDisabled(false);\n            } else {\n                setButtonDisabled(true);\n            }\n        }\n        return () => {\n            mounted = false;\n        };\n    }, [amount, userVault.userWalletAmount]);\n\n    useEffect(() => {\n        let mounted = true;\n        const onAllowanceChange = (allowance) => {\n            const amountToUseBN = bigNumberify(amount);\n            const allowanceBN = bigNumberify(allowance);\n            if (allowanceBN.lt(amountToUseBN)) {\n                setActionButton(\"APPROVE\");\n            } else {\n                setActionButton(\"DEPOSIT\");\n            }\n        };\n        mounted && onAllowanceChange(userVault.allowance);\n        return () => {\n            mounted = false;\n        };\n    }, [userVault.allowance, amount]);\n\n    const handleOnInputChange = async (_amount) => {\n        if (_amount !== \"\" && isNumberAccepted(_amount)) {\n            const amountBN = bigNumberify(\n                parseUnits(_amount, userVault.decimals)\n            );\n            if (amountBN.lte(userVault.userWalletAmount) && amountBN.gt(0)) {\n                setAmount(amountBN.toString());\n                getLiquiditionPriceEstimate(amountBN.toString());\n            } else {\n                setAmount(\"0\");\n            }\n        } else {\n            setAmount(\"0\");\n        }\n    };\n\n    const getLiquiditionPriceEstimate = async (amount) => {\n        const newCollateral = bigNumberify(\n            userVault.vaults[vaultId].maiDeposit\n        ).add(amount);\n\n        const result = getLiquidationPrice(\n            userVault.vaults[vaultId].debt,\n            newCollateral.toString(),\n            userVault.minCollateralPercentage\n        );\n        setLiquidationPriceEstimate(result);\n    };\n\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 10,\n                    flexDirection: \"column\",\n                }}\n            >\n                <Text>Amount of collateral to add :</Text>\n                <InputWithMax\n                    onChange={handleOnInputChange}\n                    typeInput=\"number\"\n                    maxValue={formatUnits(\n                        userVault.userWalletAmount,\n                        userVault.decimals\n                    )}\n                />\n\n                {actionButton === \"DEPOSIT\" && (\n                    <ButtonAction\n                        disabled={buttonDisabled}\n                        onClick={handleDepositClick}\n                    >\n                        Deposit {formatUnits(amount, userVault.decimals)}{\" \"}\n                        {userVault.label}\n                    </ButtonAction>\n                )}\n\n                {actionButton === \"APPROVE\" && (\n                    <ButtonAction\n                        disabled={buttonDisabled}\n                        onClick={handleApproveClick}\n                    >\n                        Approve\n                    </ButtonAction>\n                )}\n                {!buttonDisabled && (\n                    <Text>\n                        Estimated liquidation price : {liquidationPriceEstimate}\n                    </Text>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Deposit;\n","import React, { useEffect, useState } from \"react\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { bigNumberify } from \"ethers/utils/bignumber\";\nimport Text from \"../../components/styled/Text\";\nimport { getLiquidationPrice, isNumberAccepted } from \"../../utils/utils\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport InputWithMax from \"../../components/InputWithMax\";\nimport { useERC20Contract } from \"../../hooks/useERC20Contract\";\nimport { ButtonAction } from \"../../components/styled/Button\";\nimport tokenAddresses from \"../../constants/tokenAddresses.json\";\nimport { useAppContext } from \"../../AppContext\";\n\nconst Repay = ({ userVault, vaultId, style }) => {\n    const [amount, setAmount] = useState(\"0\");\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const [liquidationPriceEstimate, setLiquidationPriceEstimate] =\n        useState(\"\");\n    const [actionButton, setActionButton] = useState(\"APPROVE\");\n    const { maiBalance, maiAllowance } = useAppContext();\n    const { repay } = useLongContract(userVault);\n    const { approve } = useERC20Contract(userVault, tokenAddresses.MAI);\n    const handleRepayClick = () => {\n        repay(vaultId, amount);\n    };\n    const handleApproveClick = () => {\n        approve(amount);\n    };\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            if (amount !== \"\" && amount !== \"0\" && maiBalance !== \"0\") {\n                setButtonDisabled(false);\n            } else {\n                setButtonDisabled(true);\n            }\n        }\n        return () => {\n            mounted = false;\n        };\n    }, [amount, maiBalance]);\n\n    useEffect(() => {\n        let mounted = true;\n        const onAllowanceChange = (allowance) => {\n            const amountToUseBN = bigNumberify(amount);\n            const allowanceBN = bigNumberify(allowance);\n            if (allowanceBN.lt(amountToUseBN)) {\n                setActionButton(\"APPROVE\");\n            } else {\n                setActionButton(\"REPAY\");\n            }\n        };\n        mounted && onAllowanceChange(maiAllowance);\n        return () => {\n            mounted = false;\n        };\n    }, [maiAllowance, amount]);\n\n    const handleOnInputChange = async (_amount) => {\n        if (_amount !== \"\" && isNumberAccepted(_amount)) {\n            const amountBN = bigNumberify(parseUnits(_amount, 18));\n            if (\n                amountBN.lte(maiBalance) &&\n                amountBN.gt(0) &&\n                amountBN.lte(userVault.vaults[vaultId].debt)\n            ) {\n                setAmount(amountBN.toString());\n                getLiquiditionPriceEstimate(amountBN.toString());\n            } else {\n                setAmount(\"0\");\n            }\n        } else {\n            setAmount(\"0\");\n        }\n    };\n\n    const getLiquiditionPriceEstimate = async (amount) => {\n        const newDebt = bigNumberify(userVault.vaults[vaultId].debt).sub(\n            amount\n        );\n\n        const result = getLiquidationPrice(\n            newDebt,\n            userVault.vaults[vaultId].maiDeposit,\n            userVault.minCollateralPercentage\n        );\n        setLiquidationPriceEstimate(result);\n    };\n\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 10,\n                    flexDirection: \"column\",\n                }}\n            >\n                <Text>Amount of MAI to repay :</Text>\n                <InputWithMax\n                    onChange={handleOnInputChange}\n                    typeInput=\"number\"\n                    maxValue={formatUnits(maiBalance, userVault.decimals)}\n                />\n\n                {actionButton === \"REPAY\" && (\n                    <ButtonAction\n                        disabled={buttonDisabled}\n                        onClick={handleRepayClick}\n                    >\n                        Repay {formatUnits(amount, 18)} MAI\n                    </ButtonAction>\n                )}\n\n                {actionButton === \"APPROVE\" && (\n                    <ButtonAction\n                        disabled={buttonDisabled}\n                        onClick={handleApproveClick}\n                    >\n                        Approve\n                    </ButtonAction>\n                )}\n                {!buttonDisabled && (\n                    <Text>\n                        Estimated liquidation price : {liquidationPriceEstimate}\n                    </Text>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Repay;\n","import React, { useEffect } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport Text from \"../../components/styled/Text\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport Long from \"./Long\";\nimport Reduce from \"./Reduce\";\nimport Withdraw from \"./Withdraw\";\nimport Deposit from \"./Deposit\";\nimport Repay from \"./Repay\";\n\nconst UserVault = ({ userVault, vaultId, style }) => {\n    const { fetchVault } = useLongContract(userVault);\n\n    useEffect(() => {\n        let mounted = true;\n        const refrechInfo = () => {\n            fetchVault(vaultId);\n        };\n        mounted && refrechInfo();\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [vaultId]);\n\n    return (\n        <div style={style}>\n            <div\n                style={{\n                    display: \"flex\",\n                    rowGap: 15,\n                    flexDirection: \"column\",\n                }}\n            >\n                <Text>Vault ID : #{vaultId}</Text>\n                {userVault.vaults[vaultId] && (\n                    <>\n                        <Text>\n                            Collateral deposited :\n                            {formatUnits(\n                                userVault.vaults[vaultId].maiDeposit,\n                                userVault.decimals\n                            )}{\" \"}\n                            {userVault.label}\n                        </Text>\n                        <Text>\n                            Debt amount :\n                            {formatUnits(\n                                userVault.vaults[vaultId].debt,\n                                userVault.decimals\n                            )}{\" \"}\n                            MAI\n                        </Text>\n                        {userVault.vaults[vaultId].liquidationPrice && (\n                            <Text>\n                                Liquidation Price :\n                                {userVault.vaults[vaultId].liquidationPrice} USD\n                            </Text>\n                        )}\n                    </>\n                )}\n\n                {userVault.vaults[vaultId] && (\n                    <Tabs>\n                        <TabList style={{ borderBottom: 0, marginBottom: 20 }}>\n                            <Tab>\n                                <Text>Long</Text>\n                            </Tab>\n                            <Tab>\n                                <Text>Reduce</Text>\n                            </Tab>\n                            <Tab>\n                                <Text>Deposit collateral</Text>\n                            </Tab>\n                            <Tab>\n                                <Text>Repay debt</Text>\n                            </Tab>\n                            <Tab>\n                                <Text>Withdraw</Text>\n                            </Tab>\n                        </TabList>\n\n                        <TabPanel>\n                            <Long userVault={userVault} vaultId={vaultId} />\n                        </TabPanel>\n                        <TabPanel>\n                            <Reduce userVault={userVault} vaultId={vaultId} />\n                        </TabPanel>\n                        <TabPanel>\n                            <Deposit userVault={userVault} vaultId={vaultId} />\n                        </TabPanel>\n                        <TabPanel>\n                            <Repay userVault={userVault} vaultId={vaultId} />\n                        </TabPanel>\n                        <TabPanel>\n                            <Withdraw userVault={userVault} vaultId={vaultId} />\n                        </TabPanel>\n                    </Tabs>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default UserVault;\n","import styled from \"styled-components\";\nimport { colors } from \"../../theme\";\n\nconst Card = styled.div`\n    background-color: ${colors.lightGray};\n    width: 100%;\n    box-shadow: rgb(0 0 0 / 1%) 0px 0px 1px, rgb(0 0 0 / 4%) 0px 4px 8px,\n        rgb(0 0 0 / 4%) 0px 16px 24px, rgb(0 0 0 / 1%) 0px 24px 32px;\n\n    border-color: ${colors.lightBlue};\n    padding: 20px;\n    box-sizing: border-box;\n`;\n\nexport const CardHeader = styled.div`\n    background-color: ${colors.lightGray};\n    width: 100%;\n    border-color: ${colors.lightBlue};\n    padding: 20px;\n    box-sizing: border-box;\n    justify-content: space-between;\n    flex-direction: row;\n    display: flex;\n    cursor: ${({ expandable }) => (expandable ? \"pointer\" : \"initial\")};\n`;\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport Card, { CardHeader } from \"./styled/Card\";\nimport { MdOutlineExpandMore, MdOutlineExpandLess } from \"react-icons/md\";\nimport PropTypes from \"prop-types\";\n\nconst ExpandableCard = ({\n    contentStyle,\n    expandable,\n    defaultExpand,\n    headerContent,\n    children,\n}) => {\n    const [expanded, setExpanded] = useState(defaultExpand);\n\n    const expand = () => {\n        if (expandable) {\n            expanded ? setExpanded(false) : setExpanded(true);\n        }\n    };\n    return (\n        <div>\n            <CardHeader onClick={expand} expandable={expandable}>\n                {headerContent}\n                <MdOutlineExpandMore\n                    size={40}\n                    display={expandable && !expanded ? \"block\" : \"none\"}\n                />\n                <MdOutlineExpandLess\n                    size={40}\n                    display={expandable && expanded ? \"block\" : \"none\"}\n                />\n            </CardHeader>\n            {expanded && <Card style={contentStyle}>{children}</Card>}\n        </div>\n    );\n};\n\nExpandableCard.propTypes = {\n    expandable: PropTypes.bool,\n    defaultExpand: PropTypes.bool,\n};\n\nExpandableCard.defaultProps = {\n    expandable: true,\n    defaultExpand: false,\n};\n\nexport default ExpandableCard;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { ButtonAction, ButtonCommon } from \"../../components/styled/Button\";\nimport Text from \"../../components/styled/Text\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport UserVault from \"./UserVault\";\nimport { useERC20Contract } from \"../../hooks/useERC20Contract\";\nimport { useLongContract } from \"../../hooks/useLongContract\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport ExpandableCard from \"../../components/ExpandableCard\";\n\nconst VaultTypeCard = ({ userVault }) => {\n    const { active } = useWeb3React();\n    const {\n        fetchTokenBalance,\n        fetchTokenAllowance,\n        fetchMaiBalance,\n        fetchMaiUserAllowance,\n    } = useERC20Contract(userVault);\n    const {\n        fetchVaultIds,\n        createVault,\n        fetchMaxMultiplicator,\n        fetchMinimumCollateralPercentage,\n    } = useLongContract(userVault);\n    const handleCreateVault = (event) => {\n        event.stopPropagation();\n        createVault();\n    };\n\n    const [vaultIdSelected, setVaultIdSelected] = useState(undefined);\n\n    useEffect(() => {\n        let mounted = true;\n        const refrechInfo = () => {\n            fetchTokenBalance();\n            fetchVaultIds();\n            fetchTokenAllowance();\n            fetchMaxMultiplicator();\n            fetchMinimumCollateralPercentage();\n            fetchMaiBalance();\n            fetchMaiUserAllowance();\n        };\n        mounted && active && refrechInfo();\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active]);\n\n    const selectVault = (vaultId) => {\n        setVaultIdSelected(vaultId);\n    };\n\n    return (\n        <>\n            <ExpandableCard\n                contentStyle={{ paddingTop: 0 }}\n                headerContent={\n                    <div\n                        style={{\n                            width: \"100%\",\n                            justifyContent: \"space-between\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <Text>{userVault.label}</Text>\n                        <ButtonAction\n                            onClick={(event) => handleCreateVault(event)}\n                        >\n                            Create new vault\n                        </ButtonAction>\n                    </div>\n                }\n            >\n                <Text>\n                    Your {userVault.label} balance :\n                    {userVault.userWalletAmount &&\n                        formatUnits(\n                            userVault.userWalletAmount,\n                            userVault.decimals\n                        )}\n                </Text>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: \"20px\",\n                    }}\n                >\n                    {userVault.vaultIds.map((vaultId) => {\n                        return (\n                            <ButtonCommon\n                                onClick={() => selectVault(vaultId)}\n                                key={vaultId}\n                            >\n                                Vault #{vaultId}\n                            </ButtonCommon>\n                        );\n                    })}\n                </div>\n\n                {vaultIdSelected && (\n                    <UserVault\n                        userVault={userVault}\n                        vaultId={vaultIdSelected}\n                        style={{ marginTop: 20 }}\n                    />\n                )}\n            </ExpandableCard>\n        </>\n    );\n};\n\nexport default VaultTypeCard;\n","import React from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport VaultTypeCard from \"./VaultTypeCard\";\nimport { useAppContext } from \"../../AppContext\";\n\nconst Home = () => {\n    const { active } = useWeb3React();\n    const { userVaults } = useAppContext();\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                rowGap: 30,\n                flexDirection: \"column\",\n            }}\n        >\n            {active &&\n                userVaults.map((userVault) => {\n                    return (\n                        <VaultTypeCard\n                            userVault={userVault}\n                            key={userVault.index}\n                        />\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\nimport { colors } from \"../../theme\";\n\nexport const NotificationStyled = styled.div`\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    z-index: 9999;\n`;\n\nexport const NotificationContent = styled.div`\n    background-color: ${colors.lightBlue};\n    display: flex;\n    flex-direction: row;\n    margin: 20px;\n    justify-content: space-between;\n    align-items: center;\n    border-radius: 10px;\n    padding: 10px;\n`;\n\nexport const GlobalErrorStyled = styled.div`\n    position: fixed;\n    width: 100%;\n    top: 0;\n    z-index: 9999;\n    background-color: ${colors.red};\n    padding: 10px;\n    text-align: center;\n`;\n","import React from \"react\";\nimport { ButtonCommon } from \"./styled/Button\";\nimport {\n    NotificationContent,\n    NotificationStyled,\n} from \"./styled/NotificationStyled\";\n\nconst Notification = ({ children, onClose }) => {\n    return (\n        <NotificationStyled>\n            <NotificationContent>\n                <div></div>\n                {children}\n                <ButtonCommon onClick={() => onClose()}>Close</ButtonCommon>\n            </NotificationContent>\n        </NotificationStyled>\n    );\n};\n\nexport default Notification;\n","import React, { useEffect, useRef } from \"react\";\nimport { useAppContext } from \"../AppContext\";\nimport Text from \"./styled/Text\";\nimport Notification from \"./Notification\";\nimport MoonLoader from \"react-spinners/MoonLoader\";\n\nconst TransactionNotification = () => {\n    const { txnStatus, setTxnStatus } = useAppContext();\n    const handleOnCloseClick = () => setTxnStatus(\"NOT_SUBMITTED\");\n    const txnStatusRef = useRef(txnStatus);\n    txnStatusRef.current = txnStatus;\n\n    useEffect(() => {\n        let mounted = true;\n        mounted &&\n            (txnStatus === \"COMPLETE\" || txnStatus === \"ERROR\") &&\n            setTimeout(() => {\n                if (txnStatusRef.current !== \"LOADING\") {\n                    setTxnStatus(\"NOT_SUBMITTED\");\n                }\n            }, 5000);\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [txnStatus]);\n\n    const getMessage = () => {\n        let headerText = \"\";\n        switch (txnStatus) {\n            case \"LOADING\":\n                return (\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <Text t4>Transaction pending</Text>\n                        <MoonLoader\n                            loading={true}\n                            size={25}\n                            css={{ marginLeft: 10 }}\n                        />\n                    </div>\n                );\n\n            case \"COMPLETE\":\n                headerText = \"Transaction completed!\";\n                break;\n            case \"ERROR\":\n                headerText = \"An error occured\";\n                break;\n            default:\n                headerText = \"An error occured\";\n                break;\n        }\n\n        return <Text t4>{headerText}</Text>;\n    };\n\n    return (\n        <>\n            {txnStatus !== \"NOT_SUBMITTED\" && (\n                <Notification onClose={handleOnCloseClick}>\n                    {getMessage()}\n                </Notification>\n            )}\n        </>\n    );\n};\n\nexport default TransactionNotification;\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport const injected = new InjectedConnector({\n    supportedChainIds: [137, 1337],\n});\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport MMLogo from \"../static/metamask-logo.svg\";\nimport Text from \"./styled/Text\";\nimport { injected } from \"../connectors\";\nimport { shortenAddress } from \"../utils/utils\";\nimport { ButtonAction, ButtonAlert } from \"./styled/Button\";\nimport { useAppContext } from \"../AppContext\";\n\nconst MetamaskLogo = styled.img.attrs({\n    src: MMLogo,\n})`\n    height: 40px;\n`;\n\nconst pageState = {\n    LOADING: \"LOADING\",\n    READY: \"READY\",\n};\n\nconst MetamaskConnectButton = () => {\n    const { setContentError } = useAppContext();\n    const { activate, active, account, deactivate } = useWeb3React();\n    const [status, setStatus] = useState(pageState.LOADING);\n\n    useEffect(() => {\n        let mounted = true;\n        const tryActivate = async () => {\n            await activate(injected, () => {\n                setStatus(pageState.READY);\n            });\n            setStatus(pageState.READY);\n        };\n        mounted && tryActivate();\n\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (status === pageState.READY && !active) {\n        return (\n            <div style={{ alignItems: \"center\", display: \"flex\", gap: 10 }}>\n                <ButtonAction\n                    onClick={() => {\n                        if (!window.ethereum) {\n                            setContentError(\n                                \"Looks like you don't have Metamask, you'll need it to use this app.\"\n                            );\n                            return;\n                        }\n                        activate(injected, (e) => {\n                            if (e instanceof UnsupportedChainIdError) {\n                                setContentError(\n                                    \"Only Polygon mainnet is supported.\"\n                                );\n                            }\n                        });\n                    }}\n                >\n                    Connect\n                </ButtonAction>\n                <Text\n                    uppercase\n                    color=\"green\"\n                    t3\n                    lineHeight=\"40px\"\n                    className=\"mx-2\"\n                >\n                    Metamask\n                </Text>\n                <MetamaskLogo />\n            </div>\n        );\n    }\n\n    return (\n        <div style={{ alignItems: \"center\", display: \"flex\", gap: 10 }}>\n            <ButtonAlert onClick={deactivate}>\n                {active ? \"Log Out\" : \"Not Connected\"}\n            </ButtonAlert>\n            <Text uppercase color=\"green\" t3 lineHeight=\"40px\" className=\"mx-4\">\n                {shortenAddress(account)}\n            </Text>\n            <MetamaskLogo />\n        </div>\n    );\n};\n\nexport default MetamaskConnectButton;\n","import React, { useEffect, useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ButtonAction } from \"./styled/Button\";\nimport { useAppContext } from \"../AppContext\";\nimport HELPER_ADMIN from \"../contracts/HelperAdmin.json\";\nimport { ethers } from \"ethers\";\nimport { formatUnits } from \"@ethersproject/units\";\n\nconst ClaimButton = () => {\n    const [claimableRewards, setClaimableRewards] = useState(\"0\");\n    const [buttonDisabled, setButtonDisabled] = useState(true);\n    const { active, chainId, account, library } = useWeb3React();\n    const { userVaults } = useAppContext();\n\n    useEffect(() => {\n        let mounted = true;\n\n        const getRewardsTotal = async () => {\n            const vaultAddresses = getVaultAddresses();\n            const deployedNetwork = HELPER_ADMIN.networks[chainId];\n            const helperContract = new ethers.Contract(\n                deployedNetwork.address,\n                HELPER_ADMIN.abi,\n                library.getSigner(account)\n            );\n            const rewardsTotal = await helperContract.claimableRewards(\n                vaultAddresses\n            );\n\n            setClaimableRewards(rewardsTotal.toString());\n        };\n\n        mounted && active && getRewardsTotal();\n\n        return () => {\n            mounted = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [active]);\n\n    useEffect(() => {\n        let mounted = true;\n        if (mounted) {\n            if (claimableRewards === \"0\") {\n                setButtonDisabled(true);\n            } else {\n                setButtonDisabled(false);\n            }\n        }\n\n        return () => {\n            mounted = false;\n        };\n    }, [claimableRewards]);\n\n    const getVaultAddresses = () => {\n        const vaultAddresses = userVaults.map((userVault) => {\n            const vaultJson = require(\"../contracts/\" + userVault.jsonName);\n            const deployedNetwork = vaultJson.networks[chainId];\n            return deployedNetwork.address;\n        });\n\n        return vaultAddresses;\n    };\n\n    const claimAllRewards = async () => {\n        const vaultAddresses = getVaultAddresses();\n        const deployedNetwork = HELPER_ADMIN.networks[chainId];\n        const helperContract = new ethers.Contract(\n            deployedNetwork.address,\n            HELPER_ADMIN.abi,\n            library.getSigner(account)\n        );\n        await helperContract.claimRewards(vaultAddresses);\n\n        setClaimableRewards(\"0\");\n    };\n\n    return (\n        <>\n            {active && (\n                <ButtonAction\n                    onClick={() => claimAllRewards()}\n                    disabled={buttonDisabled}\n                >\n                    Claim {formatUnits(claimableRewards, 18)} QI\n                </ButtonAction>\n            )}\n        </>\n    );\n};\n\nexport default ClaimButton;\n","import React from \"react\";\nimport Text from \"./styled/Text\";\nimport Card from \"./styled/Card\";\nimport MetamaskConnectButton from \"./MetamaskConnectButton\";\nimport ClaimButton from \"./ClaimButton\";\n\nconst Header = () => {\n    return (\n        <>\n            <Card\n                style={{\n                    justifyContent: \"space-between\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                }}\n            >\n                <Text t3>Mai Finance Helper</Text>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        gap: 10,\n                    }}\n                >\n                    <ClaimButton />\n                    <MetamaskConnectButton />\n                </div>\n            </Card>\n        </>\n    );\n};\n\nexport default Header;\n","import React, { useEffect } from \"react\";\nimport { useAppContext } from \"../AppContext\";\nimport { GlobalErrorStyled } from \"./styled/NotificationStyled\";\nimport Text from \"./styled/Text\";\n\nconst GlobalError = () => {\n    const { contentError, setContentError } = useAppContext();\n\n    useEffect(() => {\n        if (contentError) {\n            setTimeout(() => {\n                setContentError(\"\");\n            }, 5000);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [contentError]);\n\n    if (!contentError) {\n        return null;\n    }\n    return (\n        <GlobalErrorStyled fluid>\n            <Text>{contentError}</Text>\n        </GlobalErrorStyled>\n    );\n};\n\nexport default GlobalError;\n","import React from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Route } from \"react-router-dom\";\nimport { AppContextProvider } from \"./AppContext\";\nimport Home from \"./pages/Home\";\nimport TransactionNotification from \"./components/TransactionNotification\";\nimport Header from \"./components/Header\";\nimport GlobalError from \"./components/GlobalError\";\n\nfunction getLibrary(provider) {\n    return new ethers.providers.Web3Provider(provider);\n}\n\nconst App = () => {\n    if (window.ethereum) {\n        window.ethereum.on(\"networkChanged\", () => window.location.reload());\n    }\n\n    return (\n        <AppContextProvider>\n            <Web3ReactProvider getLibrary={getLibrary}>\n                <div\n                    style={{\n                        display: \"flex\",\n                        rowGap: 30,\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        margin: -8,\n                    }}\n                >\n                    <GlobalError />\n                    <TransactionNotification />\n                    <Header />\n                    <div\n                        style={{\n                            maxWidth: 900,\n                            width: \"100%\",\n                        }}\n                    >\n                        <Route path=\"/\" component={Home} />\n                    </div>\n                </div>\n            </Web3ReactProvider>\n        </AppContextProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}